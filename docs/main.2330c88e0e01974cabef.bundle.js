(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(module,__webpack_exports__,__webpack_require__){"use strict";var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(47),_styles__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(16);const Button=styled_components__WEBPACK_IMPORTED_MODULE_0__.b.button`
  background-color: ${_styles__WEBPACK_IMPORTED_MODULE_1__.a.primary};
  padding: 8px 16px;
  color: ${_styles__WEBPACK_IMPORTED_MODULE_1__.a.textInvert};
  text-transform: uppercase;
  border-radius: 4px;
  letter-spacing: 0.03;
  outline: none;
  border: none;
  cursor: pointer;
  white-space: nowrap;
  transition: background-color 0.2s linear;
  font-size: 14px;

  &:hover,
  &:focus {
    background-color: ${_styles__WEBPACK_IMPORTED_MODULE_1__.a.primaryActive};
  }
`;__webpack_exports__.a=Button},16:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return COLORS}));const COLORS={primary:"#1976d2",primaryActive:"#115293",text:"#333333",textInvert:"#ffffff",background:"#ffffff"}},21:function(module,__webpack_exports__,__webpack_require__){"use strict";var react=__webpack_require__(0),react_dom=__webpack_require__(60);function isScrollParent(element){try{const{overflow:overflow,overflowY:overflowY,overflowX:overflowX}=getComputedStyle(element);return/(auto|scroll)/.test(overflow+overflowX+overflowY)}catch(e){return!1}}var Position,noop=()=>{};!function(Position){Position.ABOVE_LEFT="ABOVE_LEFT",Position.ABOVE_RIGHT="ABOVE_RIGHT",Position.BELOW_LEFT="BELOW_LEFT",Position.BELOW_RIGHT="BELOW_RIGHT"}(Position||(Position={}));const KEYCODES_ESCAPE=27;class PositioningPortal_PositioningPortal extends react.Component{constructor(){super(...arguments),this.state={top:null,left:null,portalRect:null,parentRect:null,isPositioned:!1,isOpen:!1,transitionActive:!1,scrollParents:[],strategy:null},this.portalRef=react.createRef(),this.close=()=>{this.props.onShouldClose&&this.props.onShouldClose()},this.transitionStarted=()=>{this.setState({transitionActive:!0})},this.transitionEnded=()=>{this.setState({transitionActive:!1})},this.handleOutsideMouseClick=event=>{if(!this.props.closeOnOutsideClick)return;if(!this.state.isOpen)return;if(this.portalRef.current&&this.portalRef.current.contains(event.target))return;const parentDom=react_dom.findDOMNode(this);parentDom&&parentDom.contains(event.target)||this.close()},this.handleKeydown=event=>{this.state.isOpen&&this.props.closeOnKeyDown&&this.props.closeOnKeyDown(event)&&this.close()},this.onOpen=()=>{this.state.isOpen||this.preRenderPortal().then(this.finalRenderPortal).then(()=>{this.props.onOpen()})},this.onClose=()=>{this.state.isOpen&&(this.state.scrollParents.forEach(node=>node.removeEventListener("scroll",this.close,!1)),this.setState({isOpen:!1,scrollParents:[]}),this.props.onClose())},this.preRenderPortal=()=>new Promise(resolve=>{const parentDom=react_dom.findDOMNode(this);if(parentDom&&parentDom.nodeType===Node.ELEMENT_NODE){const parentRect=parentDom.getBoundingClientRect();let scrollParents=[];scrollParents=function getScrollParents(element,scrollParents=[]){return element&&"BODY"!==element.tagName?getScrollParents(element.parentElement,isScrollParent(element)?[...scrollParents,element]:scrollParents):[...scrollParents,document.body]}(parentDom),scrollParents.forEach(node=>node.addEventListener("scroll",this.close,!1)),this.setState({isOpen:!0,transitionActive:!1,isPositioned:!1,left:0,top:0,strategy:null,parentRect:parentRect,portalRect:null,scrollParents:scrollParents},resolve)}else resolve()}),this.finalRenderPortal=()=>new Promise(resolve=>{if(this.state.isOpen&&!this.state.isPositioned&&this.portalRef.current&&this.state.parentRect){const portalRect=this.portalRef.current.getBoundingClientRect(),{top:top,left:left,strategy:strategy}=this.props.positionStrategy(this.state.parentRect,portalRect,this.props);this.setState({isPositioned:!0,left:left,strategy:strategy,top:top,portalRect:portalRect},resolve)}else resolve()})}componentDidMount(){window.document.addEventListener("keydown",this.handleKeydown,!1),window.document.addEventListener("click",this.handleOutsideMouseClick,!1),this.props.isOpen&&this.onOpen()}componentDidUpdate(prevProps){this.props.isOpen!==prevProps.isOpen&&(this.props.isOpen?this.onOpen():this.onClose())}componentWillUnmount(){window.document.removeEventListener("keydown",this.handleKeydown,!1),window.document.removeEventListener("click",this.handleOutsideMouseClick,!1),this.state.scrollParents.forEach(node=>node.removeEventListener("scroll",this.close,!1))}render(){const{children:children,portalContent:portalContent,portalElement:portalElement,rootNode:rootNode=document.body}=this.props,{top:top,left:left,parentRect:parentRect,portalRect:portalRect,isPositioned:isPositioned,isOpen:isOpen,strategy:strategy,transitionActive:transitionActive}=this.state,relatedWidth=parentRect?parentRect.width:0,portalStyle={position:"absolute",width:portalRect?`${portalRect.width}px`:"auto",left:`${left}px`,top:`${top}px`,visibility:isPositioned?"visible":"hidden"};return react.createElement(react.Fragment,null,children,(isOpen||transitionActive)&&(()=>{return react_dom.createPortal(react.cloneElement(portalElement||react.createElement("div",null),{ref:this.portalRef,style:Object.assign(Object.assign({},portalStyle),portalElement&&portalElement.props.style||{})},(element=portalContent,props={close:this.close,transitionStarted:this.transitionStarted,transitionEnded:this.transitionEnded,strategy:strategy,isOpen:isOpen,isPositioned:isPositioned,relatedWidth:relatedWidth},"function"==typeof element?element(props):element)),rootNode);var element,props})())}}PositioningPortal_PositioningPortal.defaultProps={isOpen:!1,onOpen:noop,onClose:noop,onShouldClose:noop,closeOnOutsideClick:!0,closeOnKeyDown:event=>event.keyCode===KEYCODES_ESCAPE,positionStrategy:(parentRect,portalRect)=>{const openAbove=parentRect.top+parentRect.height+portalRect.height>(window.document.documentElement||window.document.body).clientHeight&&parentRect.top-portalRect.height>0,top=openAbove?parentRect.top-portalRect.height+window.scrollY:parentRect.top+parentRect.height+window.scrollY,left=parentRect.left+portalRect.width>(window.document.documentElement||window.document.body).clientWidth&&parentRect.left-portalRect.width>0?window.scrollX+parentRect.left-portalRect.width+parentRect.width:parentRect.left+window.scrollX;let strategy=Position.BELOW_RIGHT;return openAbove&&left&&(strategy=Position.ABOVE_LEFT),openAbove&&!left&&(strategy=Position.ABOVE_RIGHT),!openAbove&&left&&(strategy=Position.BELOW_LEFT),openAbove||left||(strategy=Position.BELOW_RIGHT),{top:top,left:left,strategy:strategy}}};__webpack_exports__.a=PositioningPortal_PositioningPortal},332:function(module,exports,__webpack_require__){__webpack_require__(333),__webpack_require__(479),__webpack_require__(745),module.exports=__webpack_require__(722)},397:function(module,exports){},61:function(module,__webpack_exports__,__webpack_require__){"use strict";var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(47),_styles__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(16);const Flyout=styled_components__WEBPACK_IMPORTED_MODULE_0__.b.div`
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  text-align: center;
  width: ${props=>void 0!==props.relatedWidth?`${props.relatedWidth}px`:"250px"};
  height: 120px;
  padding: 20px;
  margin: 10px 0;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  background: ${_styles__WEBPACK_IMPORTED_MODULE_1__.a.background};
  color: ${_styles__WEBPACK_IMPORTED_MODULE_1__.a.text};
  opacity: 1;
  transition: opacity 0.2s linear;

  ${props=>"exiting"===props.state||"exited"===props.state?"opacity: 0;":""}
`;__webpack_exports__.a=Flyout},722:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(136);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(724)],module)}.call(this,__webpack_require__(723)(module))},724:function(module,exports,__webpack_require__){var map={"./components/PositioningPortal.stories.tsx":725,"./components/PositioningPortalWithState.stories.tsx":746,"./components/Tooltip.stories.tsx":744};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=724},725:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"base",(function(){return base})),__webpack_require__.d(__webpack_exports__,"scrollableTest",(function(){return scrollableTest})),__webpack_require__.d(__webpack_exports__,"withAnimation",(function(){return withAnimation})),__webpack_require__.d(__webpack_exports__,"sameWidthAsParent",(function(){return sameWidthAsParent})),__webpack_require__.d(__webpack_exports__,"noClickOutsideClose",(function(){return noClickOutsideClose})),__webpack_require__.d(__webpack_exports__,"closeOnKeydownQ",(function(){return closeOnKeydownQ}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(11),_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(31),react_transition_group__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(747),_storybook_Button__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(12),_storybook_Flyout__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(61),_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(21),addSourceDecorator=(__webpack_require__(77).withSource,__webpack_require__(77).addSource),__SOURCE_PREFIX__="/Users/mvolke/Documents/work/codastic/react-positioning-portal/src/components",__STORY__="import * as React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { withState, Store } from '@dump247/storybook-state';\nimport { Transition } from 'react-transition-group';\n\nimport Button from '../storybook/Button';\nimport Flyout from '../storybook/Flyout';\n\nimport PositioningPortal from './PositioningPortal';\n\nexport default {\n  title: 'PositioningPortal'\n};\n\nconst baseStory = (store: Store<{ isOpen: boolean }>) => (\n  <PositioningPortal\n    isOpen={store.state.isOpen}\n    onOpen={action('onOpen')}\n    onClose={action('onClose')}\n    onShouldClose={() => store.set({ isOpen: false })}\n    portalContent={\n      <Flyout>\n        Flyout positioned with portal.\n        <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n          Close flyout\n        </Button>\n      </Flyout>\n    }\n  >\n    <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n      Open portal\n    </Button>\n  </PositioningPortal>\n);\n\nexport const base = withState({ isOpen: false }, baseStory);\n\nexport const scrollableTest = withState({ isOpen: false }, store => (\n  <div style={{ margin: '95vh 95vw', display: 'inline-block' }}>\n    {baseStory(store)}\n  </div>\n));\n\nexport const withAnimation = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={({\n        isOpen,\n        isPositioned,\n        transitionStarted,\n        transitionEnded\n      }) => (\n        <Transition\n          addEndListener={(node, done) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n          in={isOpen && isPositioned}\n          onEnter={transitionStarted}\n          onExited={transitionEnded}\n        >\n          {state => (\n            <Flyout state={state}>\n              Flyout positioned with portal.\n              <Button\n                type=\"button\"\n                onClick={() => store.set({ isOpen: false })}\n              >\n                Close flyout\n              </Button>\n            </Flyout>\n          )}\n        </Transition>\n      )}\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const sameWidthAsParent = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={({ relatedWidth }) => (\n        <Flyout relatedWidth={relatedWidth}>\n          Flyout positioned with portal.\n          <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n            Close flyout\n          </Button>\n        </Flyout>\n      )}\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal which will have same width\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const noClickOutsideClose = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      closeOnOutsideClick={false}\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={\n        <Flyout>\n          Flyout positioned with portal.\n          <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n            Close flyout\n          </Button>\n        </Flyout>\n      }\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const closeOnKeydownQ = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      closeOnKeyDown={(event: KeyboardEvent) => event.keyCode === 81}\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={\n        <Flyout>\n          Flyout positioned with portal.\n          <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n            Close flyout\n          </Button>\n        </Flyout>\n      }\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal\n      </Button>\n    </PositioningPortal>\n  )\n);\n",__ADDS_MAP__={"positioningportal--base":{startLoc:{col:20,line:36},endLoc:{col:59,line:36},startBody:{col:20,line:36},endBody:{col:59,line:36}},"positioningportal--scrollable-test":{startLoc:{col:30,line:38},endLoc:{col:2,line:42},startBody:{col:30,line:38},endBody:{col:2,line:42}},"positioningportal--with-animation":{startLoc:{col:29,line:44},endLoc:{col:1,line:85},startBody:{col:29,line:44},endBody:{col:1,line:85}},"positioningportal--same-width-as-parent":{startLoc:{col:33,line:87},endLoc:{col:1,line:109},startBody:{col:33,line:87},endBody:{col:1,line:109}},"positioningportal--no-click-outside-close":{startLoc:{col:35,line:111},endLoc:{col:1,line:134},startBody:{col:35,line:111},endBody:{col:1,line:134}},"positioningportal--close-on-keydown-q":{startLoc:{col:31,line:136},endLoc:{col:1,line:159},startBody:{col:31,line:136},endBody:{col:1,line:159}}},__MAIN_FILE_LOCATION__="/PositioningPortal.stories.tsx",__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import * as React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { withState, Store } from '@dump247/storybook-state';\nimport { Transition } from 'react-transition-group';\n\nimport Button from '../storybook/Button';\nimport Flyout from '../storybook/Flyout';\n\nimport PositioningPortal from './PositioningPortal';\n\nexport default {\n  title: 'PositioningPortal'\n};\n\nconst baseStory = (store: Store<{ isOpen: boolean }>) => (\n  <PositioningPortal\n    isOpen={store.state.isOpen}\n    onOpen={action('onOpen')}\n    onClose={action('onClose')}\n    onShouldClose={() => store.set({ isOpen: false })}\n    portalContent={\n      <Flyout>\n        Flyout positioned with portal.\n        <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n          Close flyout\n        </Button>\n      </Flyout>\n    }\n  >\n    <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n      Open portal\n    </Button>\n  </PositioningPortal>\n);\n\nexport const base = withState({ isOpen: false }, baseStory);\n\nexport const scrollableTest = withState({ isOpen: false }, store => (\n  <div style={{ margin: '95vh 95vw', display: 'inline-block' }}>\n    {baseStory(store)}\n  </div>\n));\n\nexport const withAnimation = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={({\n        isOpen,\n        isPositioned,\n        transitionStarted,\n        transitionEnded\n      }) => (\n        <Transition\n          addEndListener={(node, done) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n          in={isOpen && isPositioned}\n          onEnter={transitionStarted}\n          onExited={transitionEnded}\n        >\n          {state => (\n            <Flyout state={state}>\n              Flyout positioned with portal.\n              <Button\n                type=\"button\"\n                onClick={() => store.set({ isOpen: false })}\n              >\n                Close flyout\n              </Button>\n            </Flyout>\n          )}\n        </Transition>\n      )}\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const sameWidthAsParent = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={({ relatedWidth }) => (\n        <Flyout relatedWidth={relatedWidth}>\n          Flyout positioned with portal.\n          <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n            Close flyout\n          </Button>\n        </Flyout>\n      )}\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal which will have same width\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const noClickOutsideClose = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      closeOnOutsideClick={false}\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={\n        <Flyout>\n          Flyout positioned with portal.\n          <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n            Close flyout\n          </Button>\n        </Flyout>\n      }\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const closeOnKeydownQ = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      closeOnKeyDown={(event: KeyboardEvent) => event.keyCode === 81}\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onClose={action('onClose')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={\n        <Flyout>\n          Flyout positioned with portal.\n          <Button type=\"button\" onClick={() => store.set({ isOpen: false })}>\n            Close flyout\n          </Button>\n        </Flyout>\n      }\n    >\n      <Button type=\"button\" onClick={() => store.set({ isOpen: true })}>\n        Open portal\n      </Button>\n    </PositioningPortal>\n  )\n);\n",locationsMap:{"positioningportal--base":{startLoc:{col:20,line:36},endLoc:{col:59,line:36},startBody:{col:20,line:36},endBody:{col:59,line:36}},"positioningportal--scrollable-test":{startLoc:{col:30,line:38},endLoc:{col:2,line:42},startBody:{col:30,line:38},endBody:{col:2,line:42}},"positioningportal--with-animation":{startLoc:{col:29,line:44},endLoc:{col:1,line:85},startBody:{col:29,line:44},endBody:{col:1,line:85}},"positioningportal--same-width-as-parent":{startLoc:{col:33,line:87},endLoc:{col:1,line:109},startBody:{col:33,line:87},endBody:{col:1,line:109}},"positioningportal--no-click-outside-close":{startLoc:{col:35,line:111},endLoc:{col:1,line:134},startBody:{col:35,line:111},endBody:{col:1,line:134}},"positioningportal--close-on-keydown-q":{startLoc:{col:31,line:136},endLoc:{col:1,line:159},startBody:{col:31,line:136},endBody:{col:1,line:159}}}}},title:"PositioningPortal"};const baseStory=store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onOpen"),onClose:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onClose"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Flyout__WEBPACK_IMPORTED_MODULE_5__.a,null,"Flyout positioned with portal.",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!1})},"Close flyout"))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!0})},"Open portal")),base=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__.a)({isOpen:!1},baseStory),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),scrollableTest=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:"95vh 95vw",display:"inline-block"}},baseStory(store))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),withAnimation=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onOpen"),onClose:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onClose"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:({isOpen:isOpen,isPositioned:isPositioned,transitionStarted:transitionStarted,transitionEnded:transitionEnded})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_3__.a,{addEndListener:(node,done)=>{node.addEventListener("transitionend",done,!1)},in:isOpen&&isPositioned,onEnter:transitionStarted,onExited:transitionEnded},state=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Flyout__WEBPACK_IMPORTED_MODULE_5__.a,{state:state},"Flyout positioned with portal.",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!1})},"Close flyout")))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!0})},"Open portal"))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),sameWidthAsParent=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onOpen"),onClose:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onClose"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:({relatedWidth:relatedWidth})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Flyout__WEBPACK_IMPORTED_MODULE_5__.a,{relatedWidth:relatedWidth},"Flyout positioned with portal.",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!1})},"Close flyout"))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!0})},"Open portal which will have same width"))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),noClickOutsideClose=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{closeOnOutsideClick:!1,isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onOpen"),onClose:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onClose"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Flyout__WEBPACK_IMPORTED_MODULE_5__.a,null,"Flyout positioned with portal.",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!1})},"Close flyout"))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!0})},"Open portal"))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),closeOnKeydownQ=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_2__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{closeOnKeyDown:event=>81===event.keyCode,isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onOpen"),onClose:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("onClose"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Flyout__WEBPACK_IMPORTED_MODULE_5__.a,null,"Flyout positioned with portal.",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!1})},"Close flyout"))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onClick:()=>store.set({isOpen:!0})},"Open portal"))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},744:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"base",(function(){return base})),__webpack_require__.d(__webpack_exports__,"scrollableTest",(function(){return scrollableTest})),__webpack_require__.d(__webpack_exports__,"preferredPositionTop",(function(){return preferredPositionTop}));var POSITION,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(47),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(11),_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(31),_storybook_Button__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(12),_storybook_styles__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(16),_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(21),addSourceDecorator=(__webpack_require__(77).withSource,__webpack_require__(77).addSource),__SOURCE_PREFIX__="/Users/mvolke/Documents/work/codastic/react-positioning-portal/src/components",__STORY__="import * as React from 'react';\nimport styled from 'styled-components';\nimport { action } from '@storybook/addon-actions';\nimport { withState, Store } from '@dump247/storybook-state';\n\nimport Button from '../storybook/Button';\nimport { COLORS } from '../storybook/styles';\n\nimport PositioningPortal, { PositioningStrategy } from './PositioningPortal';\n\nenum POSITION {\n  TOP = 'top',\n  LEFT = 'left',\n  RIGHT = 'right',\n  BOTTOM = 'bottom'\n}\n\nconst StyledTooltip = styled.div`\n  display: inline-block;\n  max-width: 260px;\n  position: relative;\n  background-color: ${COLORS.primary};\n  color: ${COLORS.textInvert};\n  padding: 16px;\n  border-radius: 4px;\n`;\n\ninterface Props {\n  children: React.ReactNode;\n  position: POSITION;\n  shift: number;\n}\n\nconst StyledTooltipArrow = styled.div<{ position: POSITION; shift: number }>`\n  position: absolute;\n  width: 0;\n  height: 0;\n\n  ${props =>\n    props.position === POSITION.TOP &&\n    `\n      top: 100%;\n      left: 50%;\n      margin-left: -10px;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-top: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    props.position === POSITION.BOTTOM &&\n    `\n      top: auto;\n      bottom: 100%;\n      left: 50%;\n      margin-left: -10px;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-bottom: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    props.position === POSITION.LEFT &&\n    `\n      left: 100%;\n      top: 50%;\n      margin-top: -10px;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      border-left: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    props.position === POSITION.RIGHT &&\n    `\n      left: auto;\n      top: 50%;\n      right: 100%;\n      margin-top: -10px;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      border-right: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    (props.position === POSITION.TOP || props.position === POSITION.BOTTOM) &&\n    `\n      transform: translateX(${-props.shift}px);\n    `}\n\n  ${props =>\n    (props.position === POSITION.LEFT || props.position === POSITION.RIGHT) &&\n    `\n      transform: translateY(${-props.shift}px);\n    `}\n`;\n\nconst Tooltip = ({ children, position = POSITION.TOP, shift = 0 }: Props) => {\n  return (\n    <StyledTooltip>\n      {children}\n      <StyledTooltipArrow position={position} shift={shift} />\n    </StyledTooltip>\n  );\n};\n\nconst positionStrategy: (\n  preferredPosition: POSITION\n) => PositioningStrategy<{\n  position: POSITION;\n  shift: number;\n}> = preferredPosition => (parentRect, portalRect) => {\n  const scrollX = window.scrollX || window.pageXOffset;\n  const scrollY = window.scrollY || window.pageYOffset;\n  const body = window.document.documentElement || window.document.body;\n\n  const horizontalCenter = (parentRect.width - portalRect.width) / 2;\n  const verticalCenter = (parentRect.height - portalRect.height) / 2;\n  const additionalPadding = 15;\n\n  const positions = {\n    [POSITION.BOTTOM]: {\n      position: POSITION.BOTTOM,\n      top: parentRect.top + parentRect.height + scrollY + additionalPadding,\n      left: parentRect.left + scrollX + horizontalCenter,\n      enoughSpace:\n        parentRect.top +\n          parentRect.height +\n          portalRect.height +\n          additionalPadding <\n        body.clientHeight\n    },\n    [POSITION.TOP]: {\n      position: POSITION.TOP,\n      top: parentRect.top - portalRect.height + scrollY - additionalPadding,\n      left: parentRect.left + scrollX + horizontalCenter,\n      enoughSpace: parentRect.top - portalRect.height - additionalPadding > 0\n    },\n    [POSITION.LEFT]: {\n      position: POSITION.LEFT,\n      top: parentRect.top + scrollY + verticalCenter,\n      left: parentRect.left + scrollX - portalRect.width - additionalPadding,\n      enoughSpace: parentRect.left - portalRect.width - additionalPadding > 0\n    },\n    [POSITION.RIGHT]: {\n      position: POSITION.RIGHT,\n      top: parentRect.top + scrollY + verticalCenter,\n      left: parentRect.left + scrollX + parentRect.width + additionalPadding,\n      enoughSpace:\n        parentRect.left +\n          parentRect.width +\n          portalRect.width +\n          additionalPadding <\n        body.clientWidth\n    }\n  };\n\n  // Horizontal fallback preferred\n  let sortedPositions = [\n    positions[preferredPosition],\n    positions[POSITION.BOTTOM],\n    positions[POSITION.TOP],\n    positions[POSITION.RIGHT],\n    positions[POSITION.LEFT]\n  ];\n\n  // Vertical fallback preferred\n  if (\n    preferredPosition === POSITION.LEFT ||\n    preferredPosition === POSITION.RIGHT\n  ) {\n    sortedPositions = [\n      positions[preferredPosition],\n      positions[POSITION.RIGHT],\n      positions[POSITION.LEFT],\n      positions[POSITION.BOTTOM],\n      positions[POSITION.TOP]\n    ];\n  }\n\n  const pickedPosition =\n    sortedPositions.find(({ enoughSpace }) => enoughSpace) ||\n    positions[preferredPosition];\n\n  const finalTop = Math.max(\n    Math.min(\n      pickedPosition.top,\n      body.clientHeight + scrollY - portalRect.height\n    ),\n    scrollY\n  );\n  const shiftY = Math.max(\n    Math.min(\n      finalTop - pickedPosition.top,\n      portalRect.height / 2 - additionalPadding\n    ),\n    portalRect.height / -2 + additionalPadding\n  );\n\n  const finalLeft = Math.max(\n    Math.min(\n      pickedPosition.left,\n      body.clientWidth + scrollX - portalRect.width\n    ),\n    scrollX\n  );\n  const shiftX = Math.max(\n    Math.min(\n      finalLeft - pickedPosition.left,\n      portalRect.width / 2 - additionalPadding\n    ),\n    portalRect.width / -2 + additionalPadding\n  );\n\n  return {\n    top: Math.max(\n      Math.min(\n        pickedPosition.top,\n        body.clientHeight + scrollY - portalRect.height\n      ),\n      scrollY\n    ),\n    left: Math.max(\n      Math.min(\n        pickedPosition.left,\n        body.clientWidth + scrollX - portalRect.width\n      ),\n      scrollX\n    ),\n    strategy: {\n      position: pickedPosition.position,\n      shift:\n        pickedPosition.position === 'top' ||\n        pickedPosition.position === 'bottom'\n          ? shiftX\n          : shiftY\n    }\n  };\n};\n\nexport default {\n  title: 'Example: Tooltip'\n};\n\nexport const base = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      positionStrategy={positionStrategy(POSITION.RIGHT)}\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={({ strategy }) => (\n        <Tooltip\n          position={strategy ? strategy.position : undefined}\n          shift={strategy ? strategy.shift : undefined}\n        >\n          Tooltip positioned with portal.\n        </Tooltip>\n      )}\n    >\n      <Button\n        type=\"button\"\n        onMouseEnter={() => store.set({ isOpen: true })}\n        onMouseLeave={() => store.set({ isOpen: false })}\n      >\n        Open Tooltip\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const scrollableTest = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <div style={{ margin: '95vh 95vw', display: 'inline-block' }}>\n      <PositioningPortal\n        positionStrategy={positionStrategy(POSITION.RIGHT)}\n        isOpen={store.state.isOpen}\n        onOpen={action('onOpen')}\n        onShouldClose={() => store.set({ isOpen: false })}\n        portalContent={({ strategy }) => (\n          <Tooltip\n            position={strategy ? strategy.position : undefined}\n            shift={strategy ? strategy.shift : undefined}\n          >\n            Tooltip positioned with portal.\n          </Tooltip>\n        )}\n      >\n        <Button\n          type=\"button\"\n          onMouseEnter={() => store.set({ isOpen: true })}\n          onMouseLeave={() => store.set({ isOpen: false })}\n        >\n          Open Tooltip\n        </Button>\n      </PositioningPortal>\n    </div>\n  )\n);\n\nexport const preferredPositionTop = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <div style={{ margin: '95vh 95vw', display: 'inline-block' }}>\n      <PositioningPortal\n        positionStrategy={positionStrategy(POSITION.TOP)}\n        isOpen={store.state.isOpen}\n        onOpen={action('onOpen')}\n        onShouldClose={() => store.set({ isOpen: false })}\n        portalContent={({ strategy }) => (\n          <Tooltip\n            position={strategy ? strategy.position : undefined}\n            shift={strategy ? strategy.shift : undefined}\n          >\n            Tooltip positioned with portal.\n          </Tooltip>\n        )}\n      >\n        <Button\n          type=\"button\"\n          onMouseEnter={() => store.set({ isOpen: true })}\n          onMouseLeave={() => store.set({ isOpen: false })}\n        >\n          Open Tooltip\n        </Button>\n      </PositioningPortal>\n    </div>\n  )\n);\n",__ADDS_MAP__={"example-tooltip--base":{startLoc:{col:20,line:245},endLoc:{col:1,line:271},startBody:{col:20,line:245},endBody:{col:1,line:271}},"example-tooltip--scrollable-test":{startLoc:{col:30,line:273},endLoc:{col:1,line:301},startBody:{col:30,line:273},endBody:{col:1,line:301}},"example-tooltip--preferred-position-top":{startLoc:{col:36,line:303},endLoc:{col:1,line:331},startBody:{col:36,line:303},endBody:{col:1,line:331}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};!function(POSITION){POSITION.TOP="top",POSITION.LEFT="left",POSITION.RIGHT="right",POSITION.BOTTOM="bottom"}(POSITION||(POSITION={}));const StyledTooltip=styled_components__WEBPACK_IMPORTED_MODULE_1__.b.div`
  display: inline-block;
  max-width: 260px;
  position: relative;
  background-color: ${_storybook_styles__WEBPACK_IMPORTED_MODULE_5__.a.primary};
  color: ${_storybook_styles__WEBPACK_IMPORTED_MODULE_5__.a.textInvert};
  padding: 16px;
  border-radius: 4px;
`,StyledTooltipArrow=styled_components__WEBPACK_IMPORTED_MODULE_1__.b.div`
  position: absolute;
  width: 0;
  height: 0;

  ${props=>props.position===POSITION.TOP&&`\n      top: 100%;\n      left: 50%;\n      margin-left: -10px;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-top: 10px solid ${_storybook_styles__WEBPACK_IMPORTED_MODULE_5__.a.primary};\n  `}

  ${props=>props.position===POSITION.BOTTOM&&`\n      top: auto;\n      bottom: 100%;\n      left: 50%;\n      margin-left: -10px;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-bottom: 10px solid ${_storybook_styles__WEBPACK_IMPORTED_MODULE_5__.a.primary};\n  `}

  ${props=>props.position===POSITION.LEFT&&`\n      left: 100%;\n      top: 50%;\n      margin-top: -10px;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      border-left: 10px solid ${_storybook_styles__WEBPACK_IMPORTED_MODULE_5__.a.primary};\n  `}

  ${props=>props.position===POSITION.RIGHT&&`\n      left: auto;\n      top: 50%;\n      right: 100%;\n      margin-top: -10px;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      border-right: 10px solid ${_storybook_styles__WEBPACK_IMPORTED_MODULE_5__.a.primary};\n  `}

  ${props=>(props.position===POSITION.TOP||props.position===POSITION.BOTTOM)&&`\n      transform: translateX(${-props.shift}px);\n    `}

  ${props=>(props.position===POSITION.LEFT||props.position===POSITION.RIGHT)&&`\n      transform: translateY(${-props.shift}px);\n    `}
`,Tooltip=({children:children,position:position=POSITION.TOP,shift:shift=0})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledTooltip,null,children,react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledTooltipArrow,{position:position,shift:shift})),positionStrategy=preferredPosition=>(parentRect,portalRect)=>{const scrollX=window.scrollX||window.pageXOffset,scrollY=window.scrollY||window.pageYOffset,body=window.document.documentElement||window.document.body,horizontalCenter=(parentRect.width-portalRect.width)/2,verticalCenter=(parentRect.height-portalRect.height)/2,positions={[POSITION.BOTTOM]:{position:POSITION.BOTTOM,top:parentRect.top+parentRect.height+scrollY+15,left:parentRect.left+scrollX+horizontalCenter,enoughSpace:parentRect.top+parentRect.height+portalRect.height+15<body.clientHeight},[POSITION.TOP]:{position:POSITION.TOP,top:parentRect.top-portalRect.height+scrollY-15,left:parentRect.left+scrollX+horizontalCenter,enoughSpace:parentRect.top-portalRect.height-15>0},[POSITION.LEFT]:{position:POSITION.LEFT,top:parentRect.top+scrollY+verticalCenter,left:parentRect.left+scrollX-portalRect.width-15,enoughSpace:parentRect.left-portalRect.width-15>0},[POSITION.RIGHT]:{position:POSITION.RIGHT,top:parentRect.top+scrollY+verticalCenter,left:parentRect.left+scrollX+parentRect.width+15,enoughSpace:parentRect.left+parentRect.width+portalRect.width+15<body.clientWidth}};let sortedPositions=[positions[preferredPosition],positions[POSITION.BOTTOM],positions[POSITION.TOP],positions[POSITION.RIGHT],positions[POSITION.LEFT]];preferredPosition!==POSITION.LEFT&&preferredPosition!==POSITION.RIGHT||(sortedPositions=[positions[preferredPosition],positions[POSITION.RIGHT],positions[POSITION.LEFT],positions[POSITION.BOTTOM],positions[POSITION.TOP]]);const pickedPosition=sortedPositions.find(({enoughSpace:enoughSpace})=>enoughSpace)||positions[preferredPosition],finalTop=Math.max(Math.min(pickedPosition.top,body.clientHeight+scrollY-portalRect.height),scrollY),shiftY=Math.max(Math.min(finalTop-pickedPosition.top,portalRect.height/2-15),portalRect.height/-2+15),finalLeft=Math.max(Math.min(pickedPosition.left,body.clientWidth+scrollX-portalRect.width),scrollX),shiftX=Math.max(Math.min(finalLeft-pickedPosition.left,portalRect.width/2-15),portalRect.width/-2+15);return{top:Math.max(Math.min(pickedPosition.top,body.clientHeight+scrollY-portalRect.height),scrollY),left:Math.max(Math.min(pickedPosition.left,body.clientWidth+scrollX-portalRect.width),scrollX),strategy:{position:pickedPosition.position,shift:"top"===pickedPosition.position||"bottom"===pickedPosition.position?shiftX:shiftY}}};__webpack_exports__.default={parameters:{storySource:{source:"import * as React from 'react';\nimport styled from 'styled-components';\nimport { action } from '@storybook/addon-actions';\nimport { withState, Store } from '@dump247/storybook-state';\n\nimport Button from '../storybook/Button';\nimport { COLORS } from '../storybook/styles';\n\nimport PositioningPortal, { PositioningStrategy } from './PositioningPortal';\n\nenum POSITION {\n  TOP = 'top',\n  LEFT = 'left',\n  RIGHT = 'right',\n  BOTTOM = 'bottom'\n}\n\nconst StyledTooltip = styled.div`\n  display: inline-block;\n  max-width: 260px;\n  position: relative;\n  background-color: ${COLORS.primary};\n  color: ${COLORS.textInvert};\n  padding: 16px;\n  border-radius: 4px;\n`;\n\ninterface Props {\n  children: React.ReactNode;\n  position: POSITION;\n  shift: number;\n}\n\nconst StyledTooltipArrow = styled.div<{ position: POSITION; shift: number }>`\n  position: absolute;\n  width: 0;\n  height: 0;\n\n  ${props =>\n    props.position === POSITION.TOP &&\n    `\n      top: 100%;\n      left: 50%;\n      margin-left: -10px;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-top: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    props.position === POSITION.BOTTOM &&\n    `\n      top: auto;\n      bottom: 100%;\n      left: 50%;\n      margin-left: -10px;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-bottom: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    props.position === POSITION.LEFT &&\n    `\n      left: 100%;\n      top: 50%;\n      margin-top: -10px;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      border-left: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    props.position === POSITION.RIGHT &&\n    `\n      left: auto;\n      top: 50%;\n      right: 100%;\n      margin-top: -10px;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      border-right: 10px solid ${COLORS.primary};\n  `}\n\n  ${props =>\n    (props.position === POSITION.TOP || props.position === POSITION.BOTTOM) &&\n    `\n      transform: translateX(${-props.shift}px);\n    `}\n\n  ${props =>\n    (props.position === POSITION.LEFT || props.position === POSITION.RIGHT) &&\n    `\n      transform: translateY(${-props.shift}px);\n    `}\n`;\n\nconst Tooltip = ({ children, position = POSITION.TOP, shift = 0 }: Props) => {\n  return (\n    <StyledTooltip>\n      {children}\n      <StyledTooltipArrow position={position} shift={shift} />\n    </StyledTooltip>\n  );\n};\n\nconst positionStrategy: (\n  preferredPosition: POSITION\n) => PositioningStrategy<{\n  position: POSITION;\n  shift: number;\n}> = preferredPosition => (parentRect, portalRect) => {\n  const scrollX = window.scrollX || window.pageXOffset;\n  const scrollY = window.scrollY || window.pageYOffset;\n  const body = window.document.documentElement || window.document.body;\n\n  const horizontalCenter = (parentRect.width - portalRect.width) / 2;\n  const verticalCenter = (parentRect.height - portalRect.height) / 2;\n  const additionalPadding = 15;\n\n  const positions = {\n    [POSITION.BOTTOM]: {\n      position: POSITION.BOTTOM,\n      top: parentRect.top + parentRect.height + scrollY + additionalPadding,\n      left: parentRect.left + scrollX + horizontalCenter,\n      enoughSpace:\n        parentRect.top +\n          parentRect.height +\n          portalRect.height +\n          additionalPadding <\n        body.clientHeight\n    },\n    [POSITION.TOP]: {\n      position: POSITION.TOP,\n      top: parentRect.top - portalRect.height + scrollY - additionalPadding,\n      left: parentRect.left + scrollX + horizontalCenter,\n      enoughSpace: parentRect.top - portalRect.height - additionalPadding > 0\n    },\n    [POSITION.LEFT]: {\n      position: POSITION.LEFT,\n      top: parentRect.top + scrollY + verticalCenter,\n      left: parentRect.left + scrollX - portalRect.width - additionalPadding,\n      enoughSpace: parentRect.left - portalRect.width - additionalPadding > 0\n    },\n    [POSITION.RIGHT]: {\n      position: POSITION.RIGHT,\n      top: parentRect.top + scrollY + verticalCenter,\n      left: parentRect.left + scrollX + parentRect.width + additionalPadding,\n      enoughSpace:\n        parentRect.left +\n          parentRect.width +\n          portalRect.width +\n          additionalPadding <\n        body.clientWidth\n    }\n  };\n\n  // Horizontal fallback preferred\n  let sortedPositions = [\n    positions[preferredPosition],\n    positions[POSITION.BOTTOM],\n    positions[POSITION.TOP],\n    positions[POSITION.RIGHT],\n    positions[POSITION.LEFT]\n  ];\n\n  // Vertical fallback preferred\n  if (\n    preferredPosition === POSITION.LEFT ||\n    preferredPosition === POSITION.RIGHT\n  ) {\n    sortedPositions = [\n      positions[preferredPosition],\n      positions[POSITION.RIGHT],\n      positions[POSITION.LEFT],\n      positions[POSITION.BOTTOM],\n      positions[POSITION.TOP]\n    ];\n  }\n\n  const pickedPosition =\n    sortedPositions.find(({ enoughSpace }) => enoughSpace) ||\n    positions[preferredPosition];\n\n  const finalTop = Math.max(\n    Math.min(\n      pickedPosition.top,\n      body.clientHeight + scrollY - portalRect.height\n    ),\n    scrollY\n  );\n  const shiftY = Math.max(\n    Math.min(\n      finalTop - pickedPosition.top,\n      portalRect.height / 2 - additionalPadding\n    ),\n    portalRect.height / -2 + additionalPadding\n  );\n\n  const finalLeft = Math.max(\n    Math.min(\n      pickedPosition.left,\n      body.clientWidth + scrollX - portalRect.width\n    ),\n    scrollX\n  );\n  const shiftX = Math.max(\n    Math.min(\n      finalLeft - pickedPosition.left,\n      portalRect.width / 2 - additionalPadding\n    ),\n    portalRect.width / -2 + additionalPadding\n  );\n\n  return {\n    top: Math.max(\n      Math.min(\n        pickedPosition.top,\n        body.clientHeight + scrollY - portalRect.height\n      ),\n      scrollY\n    ),\n    left: Math.max(\n      Math.min(\n        pickedPosition.left,\n        body.clientWidth + scrollX - portalRect.width\n      ),\n      scrollX\n    ),\n    strategy: {\n      position: pickedPosition.position,\n      shift:\n        pickedPosition.position === 'top' ||\n        pickedPosition.position === 'bottom'\n          ? shiftX\n          : shiftY\n    }\n  };\n};\n\nexport default {\n  title: 'Example: Tooltip'\n};\n\nexport const base = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <PositioningPortal\n      positionStrategy={positionStrategy(POSITION.RIGHT)}\n      isOpen={store.state.isOpen}\n      onOpen={action('onOpen')}\n      onShouldClose={() => store.set({ isOpen: false })}\n      portalContent={({ strategy }) => (\n        <Tooltip\n          position={strategy ? strategy.position : undefined}\n          shift={strategy ? strategy.shift : undefined}\n        >\n          Tooltip positioned with portal.\n        </Tooltip>\n      )}\n    >\n      <Button\n        type=\"button\"\n        onMouseEnter={() => store.set({ isOpen: true })}\n        onMouseLeave={() => store.set({ isOpen: false })}\n      >\n        Open Tooltip\n      </Button>\n    </PositioningPortal>\n  )\n);\n\nexport const scrollableTest = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <div style={{ margin: '95vh 95vw', display: 'inline-block' }}>\n      <PositioningPortal\n        positionStrategy={positionStrategy(POSITION.RIGHT)}\n        isOpen={store.state.isOpen}\n        onOpen={action('onOpen')}\n        onShouldClose={() => store.set({ isOpen: false })}\n        portalContent={({ strategy }) => (\n          <Tooltip\n            position={strategy ? strategy.position : undefined}\n            shift={strategy ? strategy.shift : undefined}\n          >\n            Tooltip positioned with portal.\n          </Tooltip>\n        )}\n      >\n        <Button\n          type=\"button\"\n          onMouseEnter={() => store.set({ isOpen: true })}\n          onMouseLeave={() => store.set({ isOpen: false })}\n        >\n          Open Tooltip\n        </Button>\n      </PositioningPortal>\n    </div>\n  )\n);\n\nexport const preferredPositionTop = withState(\n  { isOpen: false },\n  (store: Store<{ isOpen: boolean }>) => (\n    <div style={{ margin: '95vh 95vw', display: 'inline-block' }}>\n      <PositioningPortal\n        positionStrategy={positionStrategy(POSITION.TOP)}\n        isOpen={store.state.isOpen}\n        onOpen={action('onOpen')}\n        onShouldClose={() => store.set({ isOpen: false })}\n        portalContent={({ strategy }) => (\n          <Tooltip\n            position={strategy ? strategy.position : undefined}\n            shift={strategy ? strategy.shift : undefined}\n          >\n            Tooltip positioned with portal.\n          </Tooltip>\n        )}\n      >\n        <Button\n          type=\"button\"\n          onMouseEnter={() => store.set({ isOpen: true })}\n          onMouseLeave={() => store.set({ isOpen: false })}\n        >\n          Open Tooltip\n        </Button>\n      </PositioningPortal>\n    </div>\n  )\n);\n",locationsMap:{"example-tooltip--base":{startLoc:{col:20,line:245},endLoc:{col:1,line:271},startBody:{col:20,line:245},endBody:{col:1,line:271}},"example-tooltip--scrollable-test":{startLoc:{col:30,line:273},endLoc:{col:1,line:301},startBody:{col:30,line:273},endBody:{col:1,line:301}},"example-tooltip--preferred-position-top":{startLoc:{col:36,line:303},endLoc:{col:1,line:331},startBody:{col:36,line:303},endBody:{col:1,line:331}}}}},title:"Example: Tooltip"};const base=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_3__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{positionStrategy:positionStrategy(POSITION.RIGHT),isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onOpen"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:({strategy:strategy})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(Tooltip,{position:strategy?strategy.position:void 0,shift:strategy?strategy.shift:void 0},"Tooltip positioned with portal.")},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onMouseEnter:()=>store.set({isOpen:!0}),onMouseLeave:()=>store.set({isOpen:!1})},"Open Tooltip"))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Tooltip.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),scrollableTest=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_3__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:"95vh 95vw",display:"inline-block"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{positionStrategy:positionStrategy(POSITION.RIGHT),isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onOpen"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:({strategy:strategy})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(Tooltip,{position:strategy?strategy.position:void 0,shift:strategy?strategy.shift:void 0},"Tooltip positioned with portal.")},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onMouseEnter:()=>store.set({isOpen:!0}),onMouseLeave:()=>store.set({isOpen:!1})},"Open Tooltip")))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Tooltip.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),preferredPositionTop=addSourceDecorator(Object(_dump247_storybook_state__WEBPACK_IMPORTED_MODULE_3__.a)({isOpen:!1},store=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:"95vh 95vw",display:"inline-block"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PositioningPortal__WEBPACK_IMPORTED_MODULE_6__.a,{positionStrategy:positionStrategy(POSITION.TOP),isOpen:store.state.isOpen,onOpen:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onOpen"),onShouldClose:()=>store.set({isOpen:!1}),portalContent:({strategy:strategy})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(Tooltip,{position:strategy?strategy.position:void 0,shift:strategy?strategy.shift:void 0},"Tooltip positioned with portal.")},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_Button__WEBPACK_IMPORTED_MODULE_4__.a,{type:"button",onMouseEnter:()=>store.set({isOpen:!0}),onMouseLeave:()=>store.set({isOpen:!1})},"Open Tooltip")))),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Tooltip.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},745:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var client=__webpack_require__(136),react=__webpack_require__(0),styled_components_browser_esm=__webpack_require__(47),styles=__webpack_require__(16);const GlobalStyle=styled_components_browser_esm.a`
  *, *:after, *:before {
    box-sizing: border-box;
  }

  body {
    color: ${styles.a.text};
    font-family: sans-serif;
  }
`;Object(client.addDecorator)(story=>react.createElement(react.Fragment,null,react.createElement(GlobalStyle,null),story()))},746:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"base",(function(){return base}));var react=__webpack_require__(0),dist=__webpack_require__(11),Button=__webpack_require__(12),Flyout=__webpack_require__(61),PositioningPortal=__webpack_require__(21),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};var components_PositioningPortalWithState=props=>{const[isOpen,setIsOpen]=react.useState(!1),{children:children}=props,restProps=__rest(props,["children"]),close=()=>{setIsOpen(!1)};return react.createElement(PositioningPortal.a,Object.assign({},restProps,{isOpen:isOpen,onShouldClose:close}),((element,props)=>"function"==typeof element?element(props):element)(children,{open:()=>{setIsOpen(!0)},close:close,isOpen:isOpen}))},addSourceDecorator=(__webpack_require__(77).withSource,__webpack_require__(77).addSource);__webpack_exports__.default={parameters:{storySource:{source:"import * as React from 'react';\nimport { action } from '@storybook/addon-actions';\n\nimport Button from '../storybook/Button';\nimport Flyout from '../storybook/Flyout';\n\nimport PositioningPortalWithState from './PositioningPortalWithState';\n\nexport default {\n  title: 'PositioningPortalWithState'\n};\n\nexport const base = () => (\n  <PositioningPortalWithState\n    onOpen={action('onOpen')}\n    onClose={action('onClose')}\n    portalContent={({ close }) => (\n      <Flyout>\n        Flyout positioned with portal.\n        <Button type=\"button\" onClick={close}>\n          Close flyout\n        </Button>\n      </Flyout>\n    )}\n  >\n    {({ open, close, isOpen }) => (\n      <Button type=\"button\" onClick={isOpen ? close : open}>\n        {isOpen ? 'Close' : 'Open'} portal\n      </Button>\n    )}\n  </PositioningPortalWithState>\n);\n",locationsMap:{"positioningportalwithstate--base":{startLoc:{col:20,line:13},endLoc:{col:1,line:32},startBody:{col:20,line:13},endBody:{col:1,line:32}}}}},title:"PositioningPortalWithState"};const base=addSourceDecorator(()=>react.createElement(components_PositioningPortalWithState,{onOpen:Object(dist.action)("onOpen"),onClose:Object(dist.action)("onClose"),portalContent:({close:close})=>react.createElement(Flyout.a,null,"Flyout positioned with portal.",react.createElement(Button.a,{type:"button",onClick:close},"Close flyout"))},({open:open,close:close,isOpen:isOpen})=>react.createElement(Button.a,{type:"button",onClick:isOpen?close:open},isOpen?"Close":"Open"," portal")),{__STORY__:"import * as React from 'react';\nimport { action } from '@storybook/addon-actions';\n\nimport Button from '../storybook/Button';\nimport Flyout from '../storybook/Flyout';\n\nimport PositioningPortalWithState from './PositioningPortalWithState';\n\nexport default {\n  title: 'PositioningPortalWithState'\n};\n\nexport const base = () => (\n  <PositioningPortalWithState\n    onOpen={action('onOpen')}\n    onClose={action('onClose')}\n    portalContent={({ close }) => (\n      <Flyout>\n        Flyout positioned with portal.\n        <Button type=\"button\" onClick={close}>\n          Close flyout\n        </Button>\n      </Flyout>\n    )}\n  >\n    {({ open, close, isOpen }) => (\n      <Button type=\"button\" onClick={isOpen ? close : open}>\n        {isOpen ? 'Close' : 'Open'} portal\n      </Button>\n    )}\n  </PositioningPortalWithState>\n);\n",__ADDS_MAP__:{"positioningportalwithstate--base":{startLoc:{col:20,line:13},endLoc:{col:1,line:32},startBody:{col:20,line:13},endBody:{col:1,line:32}}},__MAIN_FILE_LOCATION__:"/PositioningPortalWithState.stories.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/Users/mvolke/Documents/work/codastic/react-positioning-portal/src/components",__IDS_TO_FRAMEWORKS__:{}})}},[[332,1,2]]]);
//# sourceMappingURL=main.2330c88e0e01974cabef.bundle.js.map